require_relative "boot"

require "rails/all"

Bundler.require(*Rails.groups)

module FukurouApp
  class Application < Rails::Application
    config.load_defaults 8.0

    config.encoding = "utf-8"

    config.autoload_lib(ignore: %w[assets tasks])

    # üéØ Rails 8 Propshaft „Ç¢„Çª„ÉÉ„ÉàË®≠ÂÆö„ÇíËøΩÂä†
    config.assets.paths << Rails.root.join("app", "assets", "builds")
    config.assets.paths << Rails.root.join("app", "assets", "images")

    # ÈñãÁô∫Áí∞Â¢É„Åß„ÅÆ„Ç¢„Çª„ÉÉ„ÉàÈÖç‰ø°„ÇíÁ¢∫ÂÆü„Å´„Åô„Çã
    config.assets.compile = true if Rails.env.development?

    # üåü Rails 8ÂØæÂøú„ÅÆÂÆâÂÖ®„Å™„Éû„Ç§„Ç∞„É¨„Éº„Ç∑„Éß„É≥ÂÆüË°å
    if ENV['FORCE_MIGRATION'] == 'true' && Rails.env.production?
      config.after_initialize do
        Rails.application.executor.wrap do
          begin
            Rails.logger.info "üîÑ FORCE_MIGRATION enabled - Starting migration..."

            # „Éá„Éº„Çø„Éô„Éº„ÇπÊé•Á∂öÁ¢∫Ë™ç
            ActiveRecord::Base.connection.execute('SELECT 1')
            Rails.logger.info "‚úÖ Database connection established"

            # Rails 8ÂØæÂøú„ÅÆÂÆâÂÖ®„Å™„Éû„Ç§„Ç∞„É¨„Éº„Ç∑„Éß„É≥ÂÆüË°å
            if defined?(ActiveRecord::Tasks::DatabaseTasks)
              ActiveRecord::Tasks::DatabaseTasks.migrate
              Rails.logger.info "‚úÖ Migration completed successfully!"
            else
              # „Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØ: Rake„Çø„Çπ„ÇØ„Çí‰ΩøÁî®
              Rails.application.load_tasks
              Rake::Task['db:migrate'].invoke
              Rails.logger.info "‚úÖ Migration completed via Rake task!"
            end

            # „ÉÜ„Éº„Éñ„É´Â≠òÂú®Á¢∫Ë™ç
            if ActiveRecord::Base.connection.table_exists?('owls')
              Rails.logger.info "‚úÖ owls table created successfully!"
            else
              Rails.logger.warn "‚ö†Ô∏è owls table not found after migration"
            end

          rescue => e
            Rails.logger.error "‚ùå Migration failed: #{e.message}"
            Rails.logger.error "Error class: #{e.class}"
            Rails.logger.error e.backtrace.first(10).join("\n")
          end
        end
      end
    end
  end
end
